// Nvidia Easy

#include <iostream>

int main() { 
	int cpu;
	int warnings = 0;
	
	for (int i = 0; i < 5; i++) {
		std::cout << "Enter temperature rating #" << i+1 << ": ";
		std::cin >> cpu;
		
		if (cpu > 85) {
			std::cout << "Warning: High Temp!" << std::endl;
			warnings += 1;
		};
	};
	
	std::cout << "\nTotal high temperature warnings: " << warnings << std::endl;
	
	return 0;
}

// Nvidia Hard

#include <iostream>

int main() {
	int temps[10];
	int inputTemp;
	int highest = 85;
	int spikes = 0;

	for (int i = 0; i < 10; i++) {
		std::cout << "Enter a temperature: ";
		std::cin >> inputTemp;
		
		temps[i] = inputTemp;
	};

	std::cout << "\nOutput: " << std::endl;

	for (int i = 1; i < 10; i++) {
		if (temps[i] > 85 && temps[i] > highest) {
			spikes += 1;
			highest = temps[i];
			std::cout << "Spike at reading #" << i+1 << std::endl;
		};
	};

	std::cout << "Total spikes: " << spikes << std::endl;

	return 0;
}

//Nvidia Extreme

#include <iostream>
#include <string>

int main() {
	std::string memory;
	std::cout << "Enter memory slots (1 = used, 0 = free): ";
	std::cin >> memory;

	int largest = 0;
	int current = 0;
	int start = 0;
	
	for (int i = 0; i < memory.length(); i++) {
		if (memory[i] == '0') {
			current += 1;
		} else if (largest < current && memory[i] == '1') {
			largest = current;
			start = (i - largest);
			current = 0;
		};
	};

	if (largest > 0) {
		std::cout << "Largest free block starts at index: " << start << " and had a length of: " << largest << std::endl;
	} else {   
		std::cout << "There are no 0s" << std::endl;
	};

	return 0;
}